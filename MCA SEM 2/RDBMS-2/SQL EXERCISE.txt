/*********************************************************************************************

Name : Pradip S Karmakar
Class : M.C.A 2
Roll_No : 10
Subject : RDBMS

**********************************************************************************************/

==================================================================================================

                                    GENERAL PL/SQL BLOCKS

==================================================================================================
Question 1 : Input two numbers and find out all arthmetic operations( +, -, x, / ).
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]>
MariaDB [test]> create procedure question1( IN a int,IN b int )
    -> BEGIN
    -> DECLARE c INT;
    ->
    -> set c = a+b;
    -> select c as Addition;
    ->
    -> set c = a-b;
    -> select c as Subtraction;
    ->
    -> set c = a*b;
    -> select c as Multiplication;
    ->
    -> set c = a/b;
    -> select c as Division;
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> delimiter ;
MariaDB [test]> call artmetic(10,5);
+----------+
| Addition |
+----------+
|       15 |
+----------+
1 row in set (0.000 sec)

+-------------+
| Subtraction |
+-------------+
|           5 |
+-------------+
1 row in set (0.006 sec)

+----------------+
| Multiplication |
+----------------+
|             50 |
+----------------+
1 row in set (0.008 sec)

+----------+
| Division |
+----------+
|        2 |
+----------+
1 row in set (0.012 sec)

Query OK, 0 rows affected (0.015 sec)



==================================================================================================
Question 2 : Enter rollno and three subject marks. Find out Total, percentage, result
             & Grade.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]>
MariaDB [test]> CREATE PROCEDURE question2( IN r_no int, IN marks1 int, IN marks2 int, IN marks3 int )
    -> BEGIN
    -> DECLARE total INT;
    -> DECLARE percentage FLOAT;
    -> DECLARE Grade VARCHAR(15);
    -> DECLARE result VARCHAR(4);
    ->
    -> set total = marks1 + marks2 + marks3;
    -> set percentage = (total * 100) / 300;
    ->
    -> IF percentage > 80 THEN
    -> set Grade = "DISTINCTION";
    -> set result = "PASS";
    -> ELSEIF percentage > 70 THEN
    -> set Grade = "FIRST CLASS";
    -> set result = "PASS";
    -> ELSEIF percentage > 60 THEN
    -> set Grade = "SECOND CLASS";
    -> set result = "PASS";
    -> ELSEIF percentage > 50 THEN
    -> set Grade = "THIRD CLASS";
    -> set result = "PASS";
    -> ELSEIF percentage > 35 THEN
    -> set Grade = "PASS";
    -> set result = "PASS";
    -> ELSE
    -> set Grade = "FAIL";
    -> set result = "FAIL";
    -> END IF;
    ->
    -> SELECT r_no,marks1,marks2,marks3,total,percentage,Grade,result as RESULT;
    ->
    -> END //
Query OK, 0 rows affected (0.026 sec)

MariaDB [test]>
MariaDB [test]> DELIMITER ;
MariaDB [test]> call question2(10,78,95,71);
+------+--------+--------+--------+-------+------------+-------------+--------+
| r_no | marks1 | marks2 | marks3 | total | percentage | Grade       | RESULT |
+------+--------+--------+--------+-------+------------+-------------+--------+
|   10 |     78 |     95 |     71 |   244 |    81.3333 | DISTINCTION | PASS   |
+------+--------+--------+--------+-------+------------+-------------+--------+
1 row in set (0.001 sec)

Query OK, 0 rows affected (0.005 sec)



==================================================================================================
Question 3 : Print First 10 Odd Number unsing Loops.
==================================================================================================

MariaDB [test]> DELIMITER //

MariaDB [test]> CREATE PROCEDURE question3()
    -> BEGIN
    -> DECLARE odd varchar(50);
    -> DECLARE cnt INT;
    -> DECLARE num INT;
    -> SET odd = '';
    -> SET num = 1;
    -> SET cnt = 1;
    -> loop_odd: LOOP
    ->     IF cnt > 10 THEN
    ->         LEAVE loop_odd;
    ->     END IF;
    ->     IF (num mod 2) THEN
    ->         SET odd = CONCAT(odd,num,"  ");
    ->         SET cnt= cnt + 1;
    ->         SET num = num + 1;
    ->     ELSE
    ->         SET num = num + 1;
    ->     END IF;
    -> END LOOP;
    ->
    -> select odd as FIRST_10_ODD_NUMBERS;
    ->
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> call question3;
+-------------------------------------+
| FIRST_10_ODD_NUMBERS                |
+-------------------------------------+
| 1  3  5  7  9  11  13  15  17  19   |
+-------------------------------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.006 sec)



==================================================================================================
Question 4 : Print Prime Number Upto 10 using While Loops.
==================================================================================================


MariaDB [test]> DELIMITER //

MariaDB [test]> CREATE PROCEDURE question4()
    -> BEGIN
    -> DECLARE prime varchar(50);
    -> DECLARE cnt INT;
    -> DECLARE i INT;
    -> DECLARE num INT;
    -> SET prime = '';
    -> SET i = 1;
    ->
    -> WHILE i <= 10 DO
    ->     SET cnt = 0;
    ->     SET num = 1;
    ->     WHILE num <= (i/2) DO
    ->         IF (i mod num = 0) THEN
    ->             SET cnt = cnt + 1;
    ->         END IF;
    ->         SET num = num + 1;
    ->     END WHILE;
    ->     IF cnt = 1 THEN
    ->         SET prime = CONCAT(prime,i,"   ");
    ->     END IF;
    ->     SET i = i + 1;
    -> END WHILE;
    ->
    -> select prime as PRIME_NUMBER_UPTO_10;
    ->
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> call question4;
+----------------------+
| PRIME_NUMBER_UPTO_10 |
+----------------------+
| 2   3   5   7        |
+----------------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.005 sec)


==================================================================================================
Question 5 : Print MAX & MIN number from 3 numbers.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]>
MariaDB [test]> CREATE PROCEDURE question5(IN num1 int, IN num2 int, IN num3 int)
    -> BEGIN
    -> DECLARE Minimum INT;
    -> DECLARE Maximum INT;
    -> set Maximum = 0;
    -> set Minimum = 0;
    -> IF (num1 > num2) AND (num1 > num3) THEN
    ->     set Maximum = num1;
    -> ELSEIF (num2 > num1) AND (num2 > num3) THEN
    ->     set Maximum = num2;
    -> ELSE
    ->     set Maximum = num3;
    -> END IF;
    -> IF (num1 < num2) AND (num1 < num3) THEN
    ->     set Minimum = num1;
    -> ELSEIF (num2 < num1) AND (num2 < num3) THEN
    ->     set Minimum = num2;
    -> ELSE
    ->     set Minimum = num3;
    -> END IF;
    ->
    -> select Maximum,Minimum;
    ->
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> call question5(10,12,15);
+---------+---------+
| Maximum | Minimum |
+---------+---------+
|      15 |      10 |
+---------+---------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.005 sec)



==================================================================================================
Question 6 : Get Input From user as empid and check whether that empid is exist, if
             Not then Show appropriate Message else show empname and salary.
==================================================================================================


MariaDB [test]> DELIMITER //
MariaDB [test]>
MariaDB [test]> CREATE PROCEDURE question6(IN empid int)
    -> BEGIN
    -> IF (select emp_id from employee where emp_id = empid) = empid THEN
    ->     select empname,salary from employee where emp_id = empid;
    -> ELSE
    ->     select "NO SUCH EMPLOYEE ID EXIST" as MESSAGE;
    -> END IF;
    -> END //
Query OK, 0 rows affected (0.019 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> call question6(1);
+---------+----------+
| empname | salary   |
+---------+----------+
| Pradip  | 80000.00 |
+---------+----------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.007 sec)

MariaDB [test]> call question6(4);
+---------+----------+
| empname | salary   |
+---------+----------+
| Milind  | 60000.00 |
+---------+----------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.007 sec)

MariaDB [test]> call question6(8);
+---------------------------+
| MESSAGE                   |
+---------------------------+
| NO SUCH EMPLOYEE ID EXIST |
+---------------------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.007 sec)


==================================================================================================
Question 7 : Get Input From user as empid and check whether that empid is exist, if
             Not then Show appropriate Message else show empname and salary.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]>
MariaDB [test]> CREATE PROCEDURE create_table()
    -> BEGIN
    ->     create table customer(
    ->         cust_id int primary key auto_increment,
    ->         cust_name varchar(15),
    ->         address varchar(150),
    ->         city varchar(25)
    ->     );
    -> END //
Query OK, 0 rows affected (0.018 sec)

MariaDB [test]> call create_table //
Query OK, 0 rows affected (0.040 sec)

MariaDB [test]> CREATE PROCEDURE insert_data()
    -> BEGIN
    ->     insert into customer values(1,'Pradip','P-block','Navsari'),
    ->     (2,'Ajinkya','E-block','Gandhidham'),
    ->     (3,'Nirav','C-block','Mundra'),
    ->     (4,'Milind','F-block','Navranpura'),
    ->     (5,'Lakshya','G-block','Gandhidham');
    -> END //
Query OK, 0 rows affected (0.020 sec)

MariaDB [test]> call insert_data //
Query OK, 5 rows affected (1.609 sec)

MariaDB [test]> CREATE PROCEDURE question7(IN custid int,IN custname varchar(15), IN cust_address varchar(150), IN cust_city varchar(25))
    -> BEGIN
    -> IF (select cust_id from customer where cust_id = custid) = custid THEN
    ->     select "CUSTOMER ID ALREADY EXIST" as MESSAGE;
    -> ELSE
    ->     insert into customer values(custid,custname,cust_address,cust_city);
    -> END IF;
    -> END //
Query OK, 0 rows affected (0.020 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> call question7(6,'sudip','Kolkata','S-block');
Query OK, 1 row affected (0.007 sec)

MariaDB [test]> select * from customer;
+---------+-----------+---------+------------+
| cust_id | cust_name | address | city       |
+---------+-----------+---------+------------+
|       1 | Pradip    | P-block | Navsari    |
|       2 | Ajinkya   | E-block | Gandhidham |
|       3 | Nirav     | C-block | Mundra     |
|       4 | Milind    | F-block | Navranpura |
|       5 | Lakshya   | G-block | Gandhidham |
|       6 | sudip     | Kolkata | S-block    |
+---------+-----------+---------+------------+
6 rows in set (0.000 sec)

MariaDB [test]> call question7(3,'kamal','Kolkata','k-block');
+---------------------------+
| MESSAGE                   |
+---------------------------+
| CUSTOMER ID ALREADY EXIST |
+---------------------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.007 sec)


==================================================================================================

                                            Functions

==================================================================================================
Question 1 : Input name and count the length of the name.
==================================================================================================

MariaDB [test]> CREATE FUNCTION fun_question1(name varchar(20))
    -> RETURNS INT
    ->
    -> BEGIN
    -> DECLARE len INT DEFAULT 0;
    ->
    -> set len = LENGTH(name);
    ->
    -> Return len;
    -> END //
Query OK, 0 rows affected (1.578 sec)


MariaDB [test]> CREATE PROCEDURE Q1(IN name varchar(20))
    -> BEGIN
    -> DECLARE len INT DEFAULT 0;
    -> set len = fun_question1(name);
    -> select len;
    -> END //
Query OK, 0 rows affected (0.025 sec)


MariaDB [test]> delimiter ;
MariaDB [test]> call Q1("pradip");
+------+
| len  |
+------+
|    6 |
+------+
1 row in set (0.001 sec)

Query OK, 0 rows affected (0.005 sec)

MariaDB [test]> call Q1("pradip karmakar");
+------+
| len  |
+------+
|   15 |
+------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.007 sec)



==================================================================================================
Question 2 : WAF which accepts one number and return TRUE if no is prime and return FALSE if
             No. is not prime.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE FUNCTION Prime(n INT)
    -> RETURNS BOOL
    -> BEGIN
    ->     DECLARE i INT DEFAULT 0;
    ->     DECLARE FLAG INT DEFAULT 0;
    ->     IF n = 1 THEN
    ->         RETURN FALSE;
    ->     ELSE
    ->         SET i = 2;
    ->         MYLOOP : WHILE i <= (n/2) DO
    ->             IF(n mod i = 0) THEN
    ->                 SET FLAG = 1;
    ->                 LEAVE MYLOOP;
    ->             END IF;
    ->             SET i = i + 1;
    ->         END WHILE;
    ->         IF FLAG = 1 THEN
    ->             RETURN FALSE;
    ->         ELSE
    ->             RETURN TRUE;
    ->         END IF;
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> select  Prime(1);
+----------+
| Prime(1) |
+----------+
|        0 |
+----------+
1 row in set (0.000 sec)

MariaDB [test]> select  Prime(2);
+----------+
| Prime(2) |
+----------+
|        1 |
+----------+
1 row in set (0.000 sec)

MariaDB [test]> select  Prime(3);
+----------+
| Prime(3) |
+----------+
|        1 |
+----------+
1 row in set (0.000 sec)

MariaDB [test]> select  Prime(4);
+----------+
| Prime(4) |
+----------+
|        0 |
+----------+
1 row in set (0.000 sec)


==================================================================================================
Question 3 : Write a function which accepts the department no and returns maximum salary of that
             Department. Handle the error if deptno does not exist or select statement return 
             more than one row.
==================================================================================================

MariaDB [test]> DELIMITER //

MariaDB [test]> CREATE FUNCTION get_max(dept_no INT)
    -> RETURNS int
    -> BEGIN
    -> DECLARE get_salary DECIMAL(8,2) DEFAULT 0;
    -> DECLARE row INT default 0;
    -> SELECT COUNT(*) INTO row FROM employee WHERE dept_id = dept_no;
    ->     IF (row > 0) THEN
    ->         SELECT MAX(salary) INTO get_salary FROM employee WHERE dept_id = dept_no GROUP BY dept_id;
    ->         RETURN get_salary;
    ->     ELSE
    ->         RETURN -404;
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;


MariaDB [test]> select * from employee;
+--------+---------+---------+-------------+----------+
| emp_id | empname | dept_id | designation | salary   |
+--------+---------+---------+-------------+----------+
|      1 | Pradip  |       1 | Manager     | 80000.00 |
|      2 | Ajinkya |       2 | Clerk       | 60000.00 |
|      3 | Nirav   |       3 | Staff       | 51000.00 |
|      4 | Milind  |       2 | Manager     | 60000.00 |
|      5 | Lakshya |       3 | Staff       | 91000.00 |
+--------+---------+---------+-------------+----------+
5 rows in set (0.000 sec)


MariaDB [test]> select get_max(3);
+------------+
| get_max(3) |
+------------+
|      91000 |
+------------+
1 row in set (0.001 sec)


MariaDB [test]> select get_max(9);
+------------+
| get_max(9) |
+------------+
|       -404 |
+------------+
1 row in set (0.000 sec)


==================================================================================================
Question 4 : Write a function to display whether the entered (User Input) employee no exists 
             or not.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE FUNCTION isexists(emp_no INT)
    -> RETURNS VARCHAR(25)
    -> BEGIN
    ->     DECLARE row INT DEFAULT 0;
    ->     SELECT COUNT(*) INTO row FROM employee WHERE emp_id = emp_no;
    ->     IF row > 0 THEN
    ->         RETURN "EMPLOYEE EXIST";
    ->     ELSE
    ->         RETURN "EMPLOYEE DOES NOT EXIST";
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.022 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]>
MariaDB [test]> select * from employee;
+--------+---------+---------+-------------+----------+
| emp_id | empname | dept_id | designation | salary   |
+--------+---------+---------+-------------+----------+
|      1 | Pradip  |       1 | Manager     | 80000.00 |
|      2 | Ajinkya |       2 | Clerk       | 60000.00 |
|      3 | Nirav   |       3 | Staff       | 51000.00 |
|      4 | Milind  |       2 | Manager     | 60000.00 |
|      5 | Lakshya |       3 | Staff       | 91000.00 |
+--------+---------+---------+-------------+----------+
5 rows in set (0.000 sec)

MariaDB [test]> select isexists(4);
+----------------+
| isexists(4)    |
+----------------+
| EMPLOYEE EXIST |
+----------------+
1 row in set (0.003 sec)

MariaDB [test]> select isexists(9);
+-------------------------+
| isexists(9)             |
+-------------------------+
| EMPLOYEE DOES NOT EXIST |
+-------------------------+
1 row in set (0.000 sec)



==================================================================================================
Question 5 : WAF which accepts one no and returns that no+100. Use INOUT mode.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE FUNCTION summation(num INT)
    -> RETURNS INT
    -> BEGIN
    -> SET num = num + 100;
    -> RETURN num;
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;

MariaDB [test]> SELECT summation(95);
+---------------+
| summation(95) |
+---------------+
|           195 |
+---------------+
1 row in set (0.000 sec)


MariaDB [test]> SELECT summation(-45);
+----------------+
| summation(-45) |
+----------------+
|             55 |
+----------------+
1 row in set (0.000 sec)



==================================================================================================
Question 6 : WAF which accepts the empno.
             If salary<10000 than give raise by 30%.
             If salary<20000 and salary>=10000 than give raise by 20%.
             If salary>20000 than give raise by 10%. Handle the error if any.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE FUNCTION salary_raise(emp_no INT)
    -> RETURNS VARCHAR(30)
    -> BEGIN
    -> DECLARE get_sal DECIMAL(8,2) DEFAULT 0;
    -> DECLARE row INT DEFAULT 0;
    -> SELECT COUNT(*) INTO row FROM employee WHERE emp_id = emp_no;
    ->     IF(row > 0) THEN
    ->         SELECT salary INTO get_sal FROM employee WHERE emp_id = emp_no;
    ->         IF get_sal > 20000 THEN
    ->             SET get_sal = get_sal + (get_sal*10)/100;
    ->             update employee set salary = get_sal WHERE emp_id = emp_no;
    ->         ELSEIF get_sal > 10000 THEN
    ->             SET get_sal = get_sal + (get_sal*20)/100;
    ->             update employee set salary = get_sal WHERE emp_id = emp_no;
    ->         ELSE
    ->             SET get_sal = get_sal + (get_sal*30)/100;
    ->             update employee set salary = get_sal WHERE emp_id = emp_no;
    ->         END IF;
    ->         RETURN CONCAT('Salary Raised To : ',get_sal);
    ->     ELSE
    ->         RETURN CONCAT('No Such Employee ID Exits');
    ->     END IF;
    -> END //
Query OK, 0 rows affected (1.785 sec)

MariaDB [test]> DELIMITER ;


MariaDB [test]> select * from employee;
+--------+---------+---------+-------------+----------+
| emp_id | empname | dept_id | designation | salary   |
+--------+---------+---------+-------------+----------+
|      1 | Pradip  |       1 | Manager     | 80000.00 |
|      2 | Ajinkya |       2 | Clerk       | 60000.00 |
|      3 | Nirav   |       3 | Staff       | 15000.00 |
|      4 | Milind  |       2 | Manager     | 60000.00 |
|      5 | Lakshya |       3 | Staff       |  9000.00 |
+--------+---------+---------+-------------+----------+
5 rows in set (0.000 sec)


MariaDB [test]> SELECT salary_raise(3);
+-----------------------------+
| salary_raise(3)             |
+-----------------------------+
| Salary Raised To : 18000.00 |
+-----------------------------+
1 row in set (0.004 sec)


MariaDB [test]> SELECT salary_raise(5);
+-----------------------------+
| salary_raise(5)             |
+-----------------------------+
| Salary Raised To : 11700.00 |
+-----------------------------+
1 row in set (0.027 sec)


MariaDB [test]> SELECT salary_raise(2);
+-----------------------------+
| salary_raise(2)             |
+-----------------------------+
| Salary Raised To : 66000.00 |
+-----------------------------+
1 row in set (0.004 sec)


MariaDB [test]> SELECT salary_raise(6);
+---------------------------+
| salary_raise(6)           |
+---------------------------+
| No Such Employee ID Exits |
+---------------------------+
1 row in set (0.000 sec)


MariaDB [test]> select * from employee;
+--------+---------+---------+-------------+----------+
| emp_id | empname | dept_id | designation | salary   |
+--------+---------+---------+-------------+----------+
|      1 | Pradip  |       1 | Manager     | 80000.00 |
|      2 | Ajinkya |       2 | Clerk       | 66000.00 |
|      3 | Nirav   |       3 | Staff       | 18000.00 |
|      4 | Milind  |       2 | Manager     | 60000.00 |
|      5 | Lakshya |       3 | Staff       | 11700.00 |
+--------+---------+---------+-------------+----------+
5 rows in set (0.000 sec)


==================================================================================================
Question 7 : WAF which accepts the empno and returns the experience in years. Handle the 
             error if empno does not exist.
             EMP(Empno, Empname, DOJ);
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE FUNCTION exp_in_year(emp_no INT)
    -> RETURNS VARCHAR(30)
    -> BEGIN
    ->     DECLARE row INT DEFAULT 0;
    ->     DECLARE experience INT DEFAULT 0;
    ->     SELECT COUNT(*) INTO row FROM employee WHERE emp_id = emp_no;
    ->     IF ( row > 0 ) THEN
    ->         SELECT YEAR(CURDATE())-YEAR(date_of_join) INTO experience FROM employee WHERE emp_id = emp_no;
    ->         RETURN CONCAT('Experience : ',experience,' years');
    ->     ELSE
    ->         RETURN CONCAT('No Such Employee Id Exists.');
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.024 sec)

MariaDB [test]> DELIMITER ;

MariaDB [test]> SELECT * FROM employee;
+--------+---------+---------+-------------+----------+--------------+
| emp_id | empname | dept_id | designation | salary   | date_of_join |
+--------+---------+---------+-------------+----------+--------------+
|      1 | Pradip  |       1 | Manager     | 80000.00 | 2013-02-03   |
|      2 | Ajinkya |       2 | Clerk       | 66000.00 | 2015-08-13   |
|      3 | Nirav   |       3 | Staff       | 18000.00 | 2003-11-09   |
|      4 | Milind  |       2 | Manager     | 60000.00 | 2019-02-22   |
|      5 | Lakshya |       3 | Staff       | 11700.00 | 2010-10-10   |
+--------+---------+---------+-------------+----------+--------------+
5 rows in set (0.000 sec)

MariaDB [test]> select exp_in_year(1);
+----------------------+
| exp_in_year(1)       |
+----------------------+
| Experience : 7 years |
+----------------------+
1 row in set (0.006 sec)


MariaDB [test]> select exp_in_year(4);
+----------------------+
| exp_in_year(4)       |
+----------------------+
| Experience : 1 years |
+----------------------+
1 row in set (0.000 sec)


MariaDB [test]> select exp_in_year(7);
+-----------------------------+
| exp_in_year(7)              |
+-----------------------------+
| No Such Employee Id Exists. |
+-----------------------------+
1 row in set (0.000 sec)



==================================================================================================

                                            CURSORS

==================================================================================================
Question 1 : Create a cursor for the emp table. Produce the output in following format:
             {empname} employee working in department {deptno} earns Rs. {salary}.
             EMP(empno, empname, salary, deptno);
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> drop procedure cursor_get_detail //
Query OK, 0 rows affected (0.013 sec)

MariaDB [test]> CREATE PROCEDURE cursor_get_detail()
    -> BEGIN
    ->     DECLARE name VARCHAR(20);
    ->     DECLARE deptid INT;
    ->     DECLARE emp_salary DECIMAL(8,2);
    ->     DECLARE stats VARCHAR(100);
    ->     DECLARE FINISHED INT DEFAULT 0;
    ->     DECLARE C1 CURSOR FOR SELECT empname,dept_id,salary FROM employee;
    ->     DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    ->     OPEN C1;
    ->         data :LOOP
    ->             IF (FINISHED = 1) THEN
    ->                 LEAVE data;
    ->             END IF;
    ->             FETCH C1 INTO name,deptid,emp_salary;
    ->             SET stats = '';
    ->             SET stats = CONCAT(stats,name,' EMPLOYEE WORKING IN DEPARTMENT ',deptid,' EARNS RS. ',emp_salary);
    ->             SELECT stats as EMP_DETAIL;
    ->         END LOOP;
    ->     CLOSE C1;
    -> END //
Query OK, 0 rows affected (0.014 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> call cursor_get_detail;
+------------------------------------------------------------+
| EMP_DETAIL                                                 |
+------------------------------------------------------------+
| Pradip EMPLOYEE WORKING IN DEPARTMENT 1 EARNS RS. 80000.00 |
+------------------------------------------------------------+
1 row in set (0.000 sec)

+-------------------------------------------------------------+
| EMP_DETAIL                                                  |
+-------------------------------------------------------------+
| Ajinkya EMPLOYEE WORKING IN DEPARTMENT 2 EARNS RS. 66000.00 |
+-------------------------------------------------------------+
1 row in set (0.004 sec)

+-----------------------------------------------------------+
| EMP_DETAIL                                                |
+-----------------------------------------------------------+
| Nirav EMPLOYEE WORKING IN DEPARTMENT 3 EARNS RS. 18000.00 |
+-----------------------------------------------------------+
1 row in set (0.009 sec)

+------------------------------------------------------------+
| EMP_DETAIL                                                 |
+------------------------------------------------------------+
| Milind EMPLOYEE WORKING IN DEPARTMENT 2 EARNS RS. 60000.00 |
+------------------------------------------------------------+
1 row in set (0.012 sec)

+-------------------------------------------------------------+
| EMP_DETAIL                                                  |
+-------------------------------------------------------------+
| Lakshya EMPLOYEE WORKING IN DEPARTMENT 3 EARNS RS. 11700.00 |
+-------------------------------------------------------------+
1 row in set (0.015 sec)

Query OK, 0 rows affected (0.023 sec)


==================================================================================================
Question 2 : Create a cursor for updating the salary of emp working in deptno 10 by 20%.
             If any rows are affected than display the no of rows affected.
             Use implicit cursor.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE PROCEDURE cursor_upate_implicit()
    -> BEGIN
    ->     DECLARE row INT DEFAULT -1;
    ->     DECLARE empid INT;
    ->     DECLARE FINISHED INT DEFAULT 0;
    ->     DECLARE C1 CURSOR FOR SELECT emp_id FROM employee WHERE dept_id = 10;
    ->     DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    ->     OPEN C1;
    ->         data : LOOP
    ->         IF FINISHED = 1 THEN
    ->             LEAVE data;
    ->         END IF;
    ->         FETCH C1 INTO empid;
    ->             UPDATE employee SET salary = salary + (salary * 20)/100 WHERE emp_id = empid;
    ->             SET row = row+1;
    ->         END LOOP;
    ->     CLOSE C1;
    ->     IF row > 0 THEN
    ->         SELECT CONCAT('Row Affected : ', row) as Message;
    ->     ELSE
    ->         SELECT 'No Row Effected' as Message;
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.023 sec)

MariaDB [test]> DELIMITER ;

MariaDB [test]> select * from employee;
+--------+---------+---------+-------------+----------+--------------+
| emp_id | empname | dept_id | designation | salary   | date_of_join |
+--------+---------+---------+-------------+----------+--------------+
|      1 | Pradip  |       1 | Manager     | 80000.00 | 2013-02-03   |
|      2 | Ajinkya |       2 | Clerk       | 66000.00 | 2015-08-13   |
|      3 | Nirav   |      10 | Staff       | 18000.00 | 2003-11-09   |
|      4 | Milind  |       2 | Manager     | 60000.00 | 2019-02-22   |
|      5 | Lakshya |      10 | Staff       | 11700.00 | 2010-10-10   |
+--------+---------+---------+-------------+----------+--------------+
5 rows in set (0.000 sec)

MariaDB [test]> CALL cursor_upate_implicit;
+------------------+
| Message          |
+------------------+
| Row Affected : 2 |
+------------------+
1 row in set (0.023 sec)

MariaDB [test]> select * from employee;
+--------+---------+---------+-------------+----------+--------------+
| emp_id | empname | dept_id | designation | salary   | date_of_join |
+--------+---------+---------+-------------+----------+--------------+
|      1 | Pradip  |       1 | Manager     | 80000.00 | 2013-02-03   |
|      2 | Ajinkya |       2 | Clerk       | 66000.00 | 2015-08-13   |
|      3 | Nirav   |      10 | Staff       | 21600.00 | 2003-11-09   |
|      4 | Milind  |       2 | Manager     | 60000.00 | 2019-02-22   |
|      5 | Lakshya |      10 | Staff       | 14040.00 | 2010-10-10   |
+--------+---------+---------+-------------+----------+--------------+
5 rows in set (0.000 sec)

Query OK, 2 rows affected (0.026 sec)


==================================================================================================
Question 3 : Create a cursor for updating the salary of emp working in deptno 10 by 20%.
             If any rows are affected than display the no of rows affected.
             Use EXPLICIT cursor.
==================================================================================================


MariaDB [test]> CREATE PROCEDURE cursor_upate_explicit()
    -> BEGIN
    ->     DECLARE empid INT;
    ->     DECLARE i INT DEFAULT 0;
    ->     DECLARE FINISHED INT DEFAULT 0;
    ->     DECLARE C1 CURSOR FOR SELECT emp_id FROM employee WHERE dept_id = 10;
    ->     DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    ->     OPEN C1;
    ->         data : LOOP
    ->         IF FINISHED = 1 THEN
    ->             LEAVE data;
    ->             set i = i + 1;
    ->             SELECT i as LEAVING;
    ->         ELSE
    ->         FETCH C1 INTO empid;
    ->             UPDATE employee SET salary = salary + (salary * 20)/100 WHERE emp_id = empid;
    ->             set i = i + 1;
    ->             SELECT i as FETCHING;
    ->         END IF;
    ->         END LOOP;
    ->     CLOSE C1;
    -> END //
Query OK, 0 rows affected (0.023 sec)

MariaDB [test]> DELIMITER ;

MariaDB [test]> call cursor_upate_explicit;
Query OK, 2 rows affected, 1 warning (0.025 sec)

MariaDB [test]> select * from employee;
+--------+---------+---------+-------------+----------+--------------+
| emp_id | empname | dept_id | designation | salary   | date_of_join |
+--------+---------+---------+-------------+----------+--------------+
|      1 | Pradip  |       1 | Manager     | 80000.00 | 2013-02-03   |
|      2 | Ajinkya |       2 | Clerk       | 66000.00 | 2015-08-13   |
|      3 | Nirav   |      10 | Staff       | 25920.00 | 2003-11-09   |
|      4 | Milind  |       2 | Manager     | 60000.00 | 2019-02-22   |
|      5 | Lakshya |      10 | Staff       | 20217.60 | 2010-10-10   |
+--------+---------+---------+-------------+----------+--------------+
5 rows in set (0.000 sec)



==================================================================================================
Question 4 : WAP that will display the name, department and salary of the first 10 employees
             getting the highest salary.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> drop procedure top_10_salary //
Query OK, 0 rows affected (0.022 sec)

MariaDB [test]> CREATE PROCEDURE top_10_salary()
    -> BEGIN
    ->     DECLARE name VARCHAR(20);
    ->     DECLARE deptid INT;
    ->     DECLARE emp_salary FLOAT;
    ->     DECLARE FINISHED INTEGER DEFAULT 0;
    ->     DECLARE C1 CURSOR FOR SELECT empname,dept_id,salary FROM employee ORDER BY salary DESC LIMIT 10;
    ->     DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    ->     OPEN C1;
    ->         data :LOOP
    ->             IF FINISHED = 1 THEN
    ->                 LEAVE data;
    ->             END IF;
    ->             FETCH C1 INTO name,deptid,emp_salary;
    ->                 select CONCAT( name,' | ',deptid,' | ',emp_salary) as Employee_Data;
    ->         END LOOP;
    ->     CLOSE C1;
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> CALL top_10_salary;
+--------------------+
| Employee_Data      |
+--------------------+
| Pradip | 1 | 80000 |
+--------------------+
1 row in set (0.000 sec)

+---------------------+
| Employee_Data       |
+---------------------+
| Ajinkya | 2 | 66000 |
+---------------------+
1 row in set (0.006 sec)

+------------------+
| Employee_Data    |
+------------------+
| Neel | 4 | 62000 |
+------------------+
1 row in set (0.008 sec)

+------------------------+
| Employee_Data          |
+------------------------+
| Lakshya | 10 | 60369.4 |
+------------------------+
1 row in set (0.014 sec)

+--------------------+
| Employee_Data      |
+--------------------+
| Milind | 2 | 60000 |
+--------------------+
1 row in set (0.017 sec)

+--------------------+
| Employee_Data      |
+--------------------+
| Pratik | 8 | 56000 |
+--------------------+
1 row in set (0.021 sec)

+---------------------+
| Employee_Data       |
+---------------------+
| Shubham | 3 | 49000 |
+---------------------+
1 row in set (0.024 sec)

+----------------------+
| Employee_Data        |
+----------------------+
| Nirav | 10 | 44789.8 |
+----------------------+
1 row in set (0.026 sec)

+--------------------+
| Employee_Data      |
+--------------------+
| Dhaval | 5 | 35000 |
+--------------------+
1 row in set (0.030 sec)

+--------------------+
| Employee_Data      |
+--------------------+
| Hemang | 6 | 32000 |
+--------------------+
1 row in set (0.035 sec)

Query OK, 0 rows affected (0.042 sec)



==================================================================================================
Question 5 : WAP using parameterized cursor to display all the information of employee living in
             specified city. Ask the city from user.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE PROCEDURE search_city(user_city VARCHAR(20))
    -> BEGIN
    ->     DECLARE custid INT;
    ->     DECLARE custname VARCHAR(15);
    ->     DECLARE addr VARCHAR(30);
    ->     DECLARE FINISHED INTEGER DEFAULT 0;
    ->     DECLARE C1 CURSOR FOR SELECT cust_id,cust_name,address FROM customer WHERE city = user_city;
    ->     DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    ->     OPEN C1;
    ->         data :LOOP
    ->         IF (FINISHED =1) THEN
    ->             LEAVE data;
    ->         END IF;
    ->         FETCH C1 INTO custid,custname,addr;
    ->             SELECT CONCAT(custid,' | ',custname,' | ',addr,' | ',user_city) as User_Detail;
    ->         END LOOP;
    ->     CLOSE C1;
    -> END //
Query OK, 0 rows affected (0.022 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> CALL search_city('Gandhidham');
+------------------------------------+
| User_Detail                        |
+------------------------------------+
| 2 | Ajinkya | E-block | Gandhidham |
+------------------------------------+
1 row in set (0.001 sec)

+------------------------------------+
| User_Detail                        |
+------------------------------------+
| 5 | Lakshya | G-block | Gandhidham |
+------------------------------------+
1 row in set (0.005 sec)

Query OK, 0 rows affected (0.014 sec)



==================================================================================================
Question 6 : WAP which display the sum of salary department wise.
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE PROCEDURE salary_dept()
    -> BEGIN
    ->     DECLARE emp_salary DECIMAL(8,2);
    ->     DECLARE deptid INT;
    ->     DECLARE stats VARCHAR(100) DEFAULT ' ';
    ->     DECLARE FINISHED INTEGER DEFAULT 0;
    ->     DECLARE C1 CURSOR FOR SELECT dept_id FROM department;
    ->     DECLARE C2 CURSOR FOR SELECT SUM(salary) FROM employee WHERE dept_id = deptid GROUP BY dept_id;
    ->     DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    ->     OPEN C1;
    ->         data :LOOP
    ->             FETCH C1 INTO deptid;
    ->             IF FINISHED = 1 THEN
    ->                 LEAVE data;
    ->             END IF;
    ->             OPEN C2;
    ->                 data2 :LOOP
    ->                     FETCH C2 INTO emp_salary;
    ->                     IF FINISHED = 1 THEN
    ->                         LEAVE data2;
    ->                     END IF;
    ->                     SET stats = '';
    ->                     SET stats = CONCAT(stats,deptid,' | ',emp_salary);
    ->                 END LOOP data2;
    ->             CLOSE C2;
    ->             SET FINISHED = 0;
    ->             SELECT stats;
    ->         END LOOP data;
    ->     CLOSE C1;
    -> END //
Query OK, 0 rows affected (0.022 sec)

MariaDB [test]>
MariaDB [test]> DELIMITER ;
MariaDB [test]> CALL salary_dept;
+--------------+
| stats        |
+--------------+
| 1 | 80000.00 |
+--------------+
1 row in set (0.002 sec)

+---------------+
| stats         |
+---------------+
| 2 | 126000.00 |
+---------------+
1 row in set (0.008 sec)

+--------------+
| stats        |
+--------------+
| 3 | 49000.00 |
+--------------+
1 row in set (0.010 sec)

+--------------+
| stats        |
+--------------+
| 4 | 62000.00 |
+--------------+
1 row in set (0.015 sec)

+--------------+
| stats        |
+--------------+
| 5 | 35000.00 |
+--------------+
1 row in set (0.016 sec)

+--------------+
| stats        |
+--------------+
| 6 | 32000.00 |
+--------------+
1 row in set (0.021 sec)


+--------------+
| stats        |
+--------------+
| 8 | 56000.00 |
+--------------+
1 row in set (0.026 sec)


+----------------+
| stats          |
+----------------+
| 10 | 105159.18 |
+----------------+
1 row in set (0.033 sec)

Query OK, 0 rows affected (0.036 sec)



==================================================================================================
Question 7 : Create a cursor to generate defferent two tables from one master table.
             Students(Rno, Name, Std, B_date, Sex);
             Girl_Table(Rno, Name, Std, B_date);
             Boy_Table(Rno, Name, Std, B_date);

             First fetch the row from Student table. If sex is ‘M’ then insert that row in
             Boy_Table and if ‘F’ then insert that row in Girl_Table.
             In both table Rollno entry must be in Sequence(Using create sequence command).
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE PROCEDURE stud_gender()
    -> BEGIN
    ->     DECLARE row INT;
    ->     DECLARE s_rno INT;
    ->     DECLARE s_name VARCHAR(20);
    ->     DECLARE s_std INT;
    ->     DECLARE s_bday DATE;
    ->     DECLARE s_sex VARCHAR(1);
    ->     DECLARE FINISHED INTEGER DEFAULT 0;
    ->     DECLARE C1 CURSOR FOR SELECT * FROM students;
    ->     DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    ->     OPEN C1;
    ->         data :LOOP
    ->             FETCH C1 INTO s_rno,s_name,s_std,s_bday,s_sex;
    ->             IF (FINISHED =1) THEN
    ->                 LEAVE data;
    ->             END IF;
    ->             IF (s_sex = 'F') THEN
    ->                 SELECT COUNT(*) INTO row FROM information_schema.tables WHERE table_schema = 'test' AND table_name = 'girl';
    ->                 IF row = 0 THEN
    ->                     CREATE TABLE girl(Rno INT AUTO_INCREMENT PRIMARY KEY, Name VARCHAR(20), Std INT, B_date DATE);
    ->                     INSERT INTO girl(Name,Std,B_date) VALUES(s_name,s_std,s_bday);
    ->                 ELSE
    ->                     INSERT INTO girl(Name,Std,B_date) VALUES(s_name,s_std,s_bday);
    ->                 END IF;
    ->             END IF;
    ->             IF (s_sex = 'M') THEN
    ->                 SELECT COUNT(*) INTO row FROM information_schema.tables WHERE table_schema = 'test'AND table_name = 'boy';
    ->                 IF row = 0 THEN
    ->                     CREATE TABLE boy(Rno INT AUTO_INCREMENT PRIMARY KEY, Name VARCHAR(20), Std INT, B_date DATE);
    ->                     INSERT INTO boy (Name,Std,B_date) VALUES(s_name,s_std,s_bday);
    ->                 ELSE
    ->                     INSERT INTO boy (Name,Std,B_date) VALUES(s_name,s_std,s_bday);
    ->                 END IF;
    ->             END IF;
    ->         END LOOP data;
    ->     CLOSE C1;
    -> END //
Query OK, 0 rows affected (0.023 sec)

MariaDB [test]> DELIMITER ;

MariaDB [test]> CALL stud_gender;
Query OK, 14 rows affected (1.786 sec)


MariaDB [test]> SELECT * FROM GIRL;
+-----+---------+------+------------+
| Rno | Name    | Std  | B_date     |
+-----+---------+------+------------+
|   1 | Kanchan |    8 | 2000-06-01 |
|   2 | Shivani |    8 | 1999-03-26 |
|   3 | Riddhi  |    8 | 1998-08-17 |
+-----+---------+------+------------+
3 rows in set (0.000 sec)


MariaDB [test]> SELECT * FROM BOY;
+-----+---------+------+------------+
| Rno | Name    | Std  | B_date     |
+-----+---------+------+------------+
|   1 | Pradip  |    8 | 1998-04-25 |
|   2 | Monil   |    8 | 1999-12-19 |
|   3 | Piyush  |    8 | 1998-02-21 |
|   4 | Anubhav |    8 | 1997-07-22 |
+-----+---------+------+------------+
4 rows in set (0.000 sec)


MariaDB [test]> SELECT * FROM STUDENTS;
+-----+---------+-----+------------+-----+
| Rno | Name    | Std | B_date     | Sex |
+-----+---------+-----+------------+-----+
|   1 | Pradip  |   8 | 1998-04-25 | M   |
|   2 | Monil   |   8 | 1999-12-19 | M   |
|   3 | Kanchan |   8 | 2000-06-01 | F   |
|   4 | Piyush  |   8 | 1998-02-21 | M   |
|   5 | Shivani |   8 | 1999-03-26 | F   |
|   6 | Riddhi  |   8 | 1998-08-17 | F   |
|   7 | Anubhav |   8 | 1997-07-22 | M   |
+-----+---------+-----+------------+-----+
7 rows in set (0.000 sec)



==================================================================================================

                                            Procedure

==================================================================================================
Question 1 : Write a procedure which accepts the empno and returns the associated empname.
             If empno does not exist than give proper error message.
             EMP(Empno, Empname).
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE PROCEDURE emp_call(IN EMP_NO VARCHAR(20))
    -> BEGIN
    ->     DECLARE row INT;
    ->     SELECT COUNT(*) INTO row FROM emp1 WHERE Empno = EMP_NO;
    ->     IF row > 0 THEN
    ->         SELECT Empname FROM emp1 as Name WHERE Empno = EMP_NO;
    ->     ELSE
    ->         SELECT "EMPLOYEE DOSE NOT EXIST." as MESSAGE;
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> CALL emp_call(1);
+---------+
| Empname |
+---------+
| Pradip  |
+---------+
1 row in set (0.002 sec)

Query OK, 1 row affected (0.005 sec)

MariaDB [test]> CALL emp_call(5);
+---------+
| Empname |
+---------+
| Lakshya |
+---------+
1 row in set (0.000 sec)

Query OK, 1 row affected (0.005 sec)

MariaDB [test]> CALL emp_call(8);
+--------------------------+
| MESSAGE                  | 
+--------------------------+
| EMPLOYEE DOSE NOT EXIST. |
+--------------------------+
1 row in set (0.000 sec)

Query OK, 1 row affected (0.006 sec)



==================================================================================================
Question 2 : WAP which accepts the student rollno and returns the name,city and marks of
             all the subjects of that student.
             
             STUDENT (Stud_ID, Stud_name, m1, m2, m3).
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE PROCEDURE std_data(IN R_NO INT)
    -> BEGIN
    -> DECLARE row INT DEFAULT 0;
    ->     SELECT COUNT(*) INTO row FROM student1 WHERE Stud_ID = R_NO;
    ->     IF row > 0 THEN
    ->         SELECT Stud_name,m1,m2,m3 from student1 where Stud_ID = R_NO;
    ->     ELSE
    ->         SELECT "NO DETAIL FOUND" as MESSAGE;
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.023 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> call std_data(1);
+-----------+------+------+------+
| Stud_name | m1   | m2   | m3   |
+-----------+------+------+------+
| Pradip    |   45 |   76 |   66 |
+-----------+------+------+------+
1 row in set (0.000 sec)

Query OK, 1 row affected (0.002 sec)

MariaDB [test]> call std_data(2);
+-----------+------+------+------+
| Stud_name | m1   | m2   | m3   |
+-----------+------+------+------+
| Nirav     |   96 |   97 |   99 |
+-----------+------+------+------+
1 row in set (0.000 sec)

Query OK, 1 row affected (0.002 sec)

MariaDB [test]> call std_data(3);
+-----------------+
| MESSAGE         |
+-----------------+
| NO DETAIL FOUND |
+-----------------+
1 row in set (0.000 sec)

Query OK, 1 row affected (0.006 sec)



==================================================================================================
Question 3 : WAP which accepts the name from the user. Return UPPER if name is in uppercase,
             LOWER if name is in lowercase, MIXCASE if name is entered using both the case.
==================================================================================================


MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE PROCEDURE case_check(IN user_input VARCHAR(20))
    -> BEGIN
    ->     DECLARE i INT DEFAULT 1;
    ->     DECLARE up INT DEFAULT 0;
    ->     DECLARE low INT DEFAULT 0;
    ->     DECLARE len INT;
    ->     DECLARE ch int;
    ->     SET LEN = LENGTH(user_input);
    ->     WHILE i <= len DO
    ->         SET ch = ASCII(SUBSTR(user_input,i,1));
    ->         IF ch >= 65 AND ch <= 90 THEN
    ->             SET up = up + 1;
    ->         ELSE
    ->             SET low = low + 1;
    ->         END IF;
    ->         SET i = i + 1;
    ->     END WHILE;
    ->     IF ( len = up) THEN
    ->         SELECT "STRING IS IN UPPERCASE FORM." as MESSAGE;
    ->     ELSEIF(len = low) THEN
    ->         SELECT "STRING IS IN LOWERCASE FORM." as MESSAGE;
    ->     ELSE
    ->         SELECT "STRING IS IN MIXCASE FORM" as MESSAGE;
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> call case_check('pradip');
+------------------------------+
| MESSAGE                      |
+------------------------------+
| STRING IS IN LOWERCASE FORM. |
+------------------------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.003 sec)

MariaDB [test]> call case_check('PRADIP');
+------------------------------+
| MESSAGE                      |
+------------------------------+
| STRING IS IN UPPERCASE FORM. |
+------------------------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.004 sec)

MariaDB [test]> call case_check('PrAdip');
+---------------------------+
| MESSAGE                   |
+---------------------------+
| STRING IS IN MIXCASE FORM |
+---------------------------+
1 row in set (0.000 sec)

Query OK, 0 rows affected (0.003 sec)


==================================================================================================
Question 4 : WAP which accepts the student rollno and returns the highest percent and name
             of that student to the calling block.
                
             STUDENT(Stud_ID,Stud_name,percent);
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE PROCEDURE std_percent(IN R_NO INT)
    -> BEGIN
    -> DECLARE row INT DEFAULT 0;
    -> DECLARE name varchar(30);
    -> DECLARE total FLOAT DEFAULT 0;
    -> DECLARE percent FLOAT DEFAULT 0;
    ->     SELECT COUNT(*) INTO row FROM student1 WHERE Stud_ID = R_NO;
    ->     IF row > 0 THEN
    ->         Select Stud_name INTO name from student1 where Stud_ID = R_NO;
    ->         select m1+m2+m3 INTO total from student1 where Stud_ID = R_NO;
    ->         set percent = (total*100)/300;
    ->         SELECT CONCAT('Highest Percent of ', percent ,' Obtain By ',name) as STUDENT_DATA;
    ->     ELSE
    ->         SELECT "NO DETAIL FOUND" as MESSAGE;
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> call std_percent(1);
+---------------------------------------------+
| STUDENT_DATA                                |
+---------------------------------------------+
| Highest Percent of 62.3333 Obtain By Pradip |
+---------------------------------------------+
1 row in set (0.001 sec)

Query OK, 3 rows affected (0.006 sec)

MariaDB [test]> call std_percent(2);
+--------------------------------------------+
| STUDENT_DATA                               |
+--------------------------------------------+
| Highest Percent of 97.3333 Obtain By Nirav |
+--------------------------------------------+
1 row in set (0.000 sec)

Query OK, 3 rows affected (0.006 sec)

MariaDB [test]> call std_percent(3);
+-----------------+
| MESSAGE         |
+-----------------+
| NO DETAIL FOUND |
+-----------------+
1 row in set (0.000 sec)

Query OK, 1 row affected (0.005 sec)


==================================================================================================
Question 5 : WAP which accepts the date of joining for specific employee and returns the years of
             experience along with its name. Accept the Employee no from user.

             EMP (empno, empname, DOJ);
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> CREATE PROCEDURE exp_name(IN empno INT)
    -> BEGIN
    ->     DECLARE row INT;
    ->     DECLARE experience INT;
    ->     DECLARE name VARCHAR(20);
    ->     SELECT COUNT(*) INTO row FROM employee WHERE emp_id = empno;
    ->     IF row > 0 THEN
    ->         SELECT YEAR(CURDATE())-YEAR(date_of_join) INTO experience FROM employee WHERE emp_id = empno;
    ->         SELECT empname INTO name FROM employee WHERE emp_id = empno;
    ->         SELECT name as NAME,experience as Experience;
    ->     ELSE
    ->         SELECT 'NO such Employee ID Found' as MESSAGE;
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.022 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> CALL exp_name(1);
+--------+------------+
| NAME   | Experience |
+--------+------------+
| Pradip |          7 |
+--------+------------+
1 row in set (0.001 sec)

Query OK, 3 rows affected (0.006 sec)

MariaDB [test]> CALL exp_name(3);
+-------+------------+
| NAME  | Experience |
+-------+------------+
| Nirav |         17 |
+-------+------------+
1 row in set (0.000 sec)

Query OK, 3 rows affected (0.005 sec)

MariaDB [test]> CALL exp_name(19);
+---------------------------+
| MESSAGE                   |
+---------------------------+
| NO such Employee ID Found |
+---------------------------+
1 row in set (0.000 sec)

Query OK, 1 row affected (0.006 sec)


==================================================================================================
Question 6 : WAP which accepts the student roll no and returns the result (in the form of 
             class: first class, second class, third class or fail).
             
             STUDENT (Stud_ID, Stud_name,m1, m2, m3).
==================================================================================================

MariaDB [test]> DELIMITER //
MariaDB [test]> drop procedure std_result //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> CREATE PROCEDURE std_result(IN R_NO INT)
    -> BEGIN
    ->     DECLARE row INT DEFAULT 0;
    ->     DECLARE name varchar(30);
    ->     DECLARE total FLOAT DEFAULT 0;
    ->     DECLARE percent FLOAT DEFAULT 0;
    ->         SELECT COUNT(*) INTO row FROM student1 WHERE Stud_ID = R_NO;
    ->         IF row > 0 THEN
    ->             Select Stud_name INTO name from student1 where Stud_ID = R_NO;
    ->             select m1+m2+m3 INTO total from student1 where Stud_ID = R_NO;
    ->             set percent = (total*100)/300;
    ->             IF percent > 80 THEN
    ->                 SELECT name as Name, "DISTINCTION" as RESULT;
    ->             ELSEIF percent > 70 THEN
    ->                 SELECT name as Name, "FIRST CLASS" as RESULT;
    ->             ELSEIF percent > 60 THEN
    ->                 SELECT name as Name, "SECOND CLASS" as RESULT;
    ->             ELSEIF percent > 50 THEN
    ->                 SELECT name as Name, "THIRD CLASS" as RESULT;
    ->             ELSEIF percent > 35 THEN
    ->                 SELECT name as Name, "PASS CLASS" as RESULT;
    ->             ELSE
    ->                 SELECT name as Name, "FAIL" as RESULT;
    ->             END IF;
    ->         ELSE
    ->             SELECT "NO DETAIL FOUND" as MESSAGE;
    ->         END IF;
    -> END //
Query OK, 0 rows affected (0.021 sec)

MariaDB [test]> DELIMITER ;
MariaDB [test]> call std_result(1);
+--------+--------------+
| Name   | RESULT       |
+--------+--------------+
| Pradip | SECOND CLASS |
+--------+--------------+
1 row in set (0.001 sec)

Query OK, 3 rows affected (0.006 sec)

MariaDB [test]> call std_result(2);
+-------+-------------+
| Name  | RESULT      |
+-------+-------------+
| Nirav | DISTINCTION |
+-------+-------------+
1 row in set (0.000 sec)

Query OK, 3 rows affected (0.006 sec)

MariaDB [test]> call std_result(3);
+-----------------+
| MESSAGE         |
+-----------------+
| NO DETAIL FOUND |
+-----------------+
1 row in set (0.000 sec)

Query OK, 1 row affected (0.005 sec)


E.O.F
************************************************************************************************