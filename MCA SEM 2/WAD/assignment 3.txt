*************************************************************************************************************************************
*************************************************************************************************************************************
Name: Pradip S Karmakar
Roll-no: 10
Class: MCA 2
Subject: Web Application Development (WAD)
*************************************************************************************************************************************
*************************************************************************************************************************************

1) Create tables described below:-

a)Table name: client_master
	Description: Used to store client information

	CREATE TABLE `assignment 3`.`client_master` ( `client_no` VARCHAR(6) NOT NULL , `name` VARCHAR(20) NOT NULL , `address1` VARCHAR(30) NULL DEFAULT NULL , 	
               `address2` VARCHAR(30) NULL DEFAULT NULL , `city` VARCHAR(15) NULL DEFAULT NULL , `pincode` INT(8) NULL DEFAULT NULL , `state` VARCHAR(15) NULL DEFAULT NULL , 	
               `bal_due` INT(10,2) NULL DEFAULT NULL , PRIMARY KEY (`client_no`(6))) ENGINE = InnoDB;

b)Table name: product_master
	Description: Used to store product information
	
	CREATE TABLE `assignment 3`.`product_master` ( `product_no` VARCHAR(6) NOT NULL , `description` VARCHAR(15) NOT NULL , `profit_percent` DOUBLE(4,2) NOT NULL , 	
              `unit_measure` VARCHAR(10) NOT NULL , `qty_no_hand` INT(8) NOT NULL , `reorder_lvl` INT(8) NOT NULL , `sell_price` DOUBLE(8,2) NOT NULL , `cost_price` DOUBLE	
              (8,2) NOT NULL , PRIMARY KEY (`product_no`(6)) COMMENT 'first letter must start with p') ENGINE = InnoDB;

c)Table name: salesman_master
	Description: Used to store salesman working for the company.
		
	CREATE TABLE IF NOT EXISTS `salesman_master` (
			  `salesman_no` varchar(6) NOT NULL,
			  `salesman_name` varchar(20) NOT NULL,
			  `address1` varchar(30) DEFAULT NULL,
			  `address2` varchar(30) DEFAULT NULL,
			  `city` varchar(20) DEFAULT NULL,
			  `pincode` varchar(8) DEFAULT NULL,
			  `state` varchar(20) NOT NULL,
			  `sal_amt` int(8) NOT NULL,
			  `tgt_to_get` int(8) NOT NULL,
			  `ytd_sales` int(8) NOT NULL,
			  `remarks` varchar(60) DEFAULT NULL,
			  PRIMARY KEY (`salesman_no`)
			);
			
d)Table name:sale_order
	Description: Used to store client’s orders
		
	CREATE TABLE IF NOT EXISTS `sale_order` (
			  `order_no` varchar(6) NOT NULL,
			  `order_date` date NOT NULL,
			  `client_no` varchar(6) NOT NULL,
			  `dely_addr` varchar(25) NOT NULL,
			  `salesman_no` varchar(6) NOT NULL,
			  `dely_type` char(1) NOT NULL DEFAULT 'F',
			  `billed_yn` char(1) NOT NULL,
			  `dely_date` date NOT NULL,
			  `order_status` varchar(10) NOT NULL,
			  PRIMARY KEY (`order_no`),
			  KEY `client_no` (`client_no`),
			  KEY `salesman_no` (`salesman_no`)
			);	

	ALTER TABLE `sale_order` ADD FOREIGN KEY (`client_no`) REFERENCES `client_master`(`client_no`) ON DELETE RESTRICT ON UPDATE RESTRICT; ALTER TABLE `sale_order` 
	ADD FOREIGN KEY (`salesman_no`) REFERENCES `salesman_master`(`salesman_no`) ON DELETE RESTRICT ON UPDATE RESTRICT;

e)Table Name: sale_order_details
	Description: Used to store client’s orders with details of each product ordered.
		
	CREATE TABLE IF NOT EXISTS `sales_order_details` (
			  `order_no` varchar(6) NOT NULL,
			  `product_no` varchar(6) NOT NULL,
			  `qty_ordered` int(8) NOT NULL,
			  `qty_disp` int(8) NOT NULL,
			  `product_rate` int(10) NOT NULL,
			  KEY `order_no` (`order_no`),
			  KEY `product_no` (`product_no`)
			);
			
	ALTER TABLE `sales_order_details`
	ADD CONSTRAINT `sales_order_details_ibfk_2` FOREIGN KEY (`product_no`) REFERENCES `product_master` (`product_no`),
	ADD CONSTRAINT `sales_order_details_ibfk_1` FOREIGN KEY (`order_no`) REFERENCES `sale_order` (`order_no`);

*************************************************************************************************************************************

2) Insert the following data into their respective tables:

	a) Data for client_master table:

	INSERT INTO `client_master` (`client_no`, `Name`, `Address1`, `Address2`, `City`, `Pincode`, `State`, `Bal_due`) VALUES
		('C00001', 'Ivan Bayross', '', '', 'Bombay', 400054, 'Maharashtra', 15000),
		('C00002', 'Vandana Saitwal', '', '', 'Madras', 780001, 'Tamil Nadu', 0),
		('C00003', 'Pramada Jaguste', '', '', 'BOmbay', 400057, 'Maharashtra', 5000),
		('C00004', 'Basu Navindgi', '', '', 'Bombay', 400056, 'Maharshtra', 0),
		('C00005', 'Ravi Shreedharan', '', '', 'Delhi', 100001, 'Delhi', 2000),
		('C00006', 'Rukmini', '', '', 'Bombay', 400050, 'Maharashtra', 0);
		
	b) Data for product_master table:
	
		INSERT INTO `product_master` (`product_no`, `description`, `profit_percent`, `unit_measure`, `qty_no_hand`, `reorder_lvl`, `sell_price`, `cost_price`) VALUES
		('P00001', '1.44 Floppies', 5, 'Piece', 100, 20, 525, 500),
		('P03453', 'monitors', 6, 'Piece', 10, 3, 12000, 11280),
		('P06734', 'mouse', 5, 'Piece', 20, 5, 1050, 1000),
		('P07865', '1.22 Floppies', 5, 'Piece', 20, 5, 525, 500),
		('P07868', 'keyboards', 2, 'Piece', 10, 3, 3150, 3050),
		('P07885', 'CD Drive', 3, 'Piece', 10, 3, 5250, 5100),
		('P07965', '540 HHD', 4, 'Piece', 10, 3, 8400, 8000),
		('P07975', '1.44 Drive', 5, 'Piece', 10, 3, 1050, 1000),
		('P08865', '1.22 Drive', 5, 'Piece', 2, 3, 1050, 1000);
		
	c) Data for salesman_master table:
	
		INSERT INTO `salesman_master` (`salesman_no`, `salesman_name`, `address1`, `address2`, `city`, `pincode`, `state`, `sal_amt`, `tgt_to_get`, `ytd_sales`, `remarks`) VALUES
		('S00001', 'Kiran', 'A/14', 'Worli', 'Bombay', '400002', 'Maharastra', 3000, 100, 50, 'Good'),
		('S00002', 'Manish', '65', 'Nariman', 'Bombay', '400001', 'Maharastra', 3000, 200, 100, 'Good'),
		('S00003', 'Ravi', 'P-7', 'Bandra', 'Bombay', '400032', 'Maharastra', 3000, 200, 100, 'Good'),
		('S00004', 'Aashish', 'A/5', 'Juhu', 'Bombay', '400044', 'Maharastra', 3500, 200, 150, 'Good');
		
	d) Data for sales_order table:
	
		INSERT INTO `sale_order` (`order_no`, `order_date`, `client_no`, `dely_addr`, `salesman_no`, `dely_type`, `billed_yn`, `dely_date`, `order_status`) VALUES
		('O19001', '1996-01-12', 'C00001', '', 'S00001', 'F', 'N', '1996-01-20', 'In Process'),
		('O19002', '1996-01-25', 'C00002', '', 'S00002', 'P', 'N', '1996-01-27', 'Cancelled'),
		('O19003', '1996-04-03', 'C00001', '', 'S00001', 'F', 'Y', '1996-05-22', 'Fulfilled'),
		('O19008', '1996-05-24', 'C00005', '', 'S00004', 'F', 'N', '1996-05-26', 'In process'),
		('O46865', '1996-02-18', 'C00003', '', 'S00003', 'F', 'Y', '1996-02-20', 'Fulfilled'),
		('O46866', '1996-05-20', 'C00004', '', 'S00002', 'F', 'N', '1996-05-22', 'Cancelled');
		
	e) Data for the sales_order_details table:
	
		INSERT INTO `sales_order_details` (`order_no`, `product_no`, `qty_ordered`, `qty_disp`, `product_rate`) VALUES
		('O19001', 'P00001', 4, 4, 525),
		('O19001', 'P07965', 2, 1, 8400),
		('O19001', 'P07885', 2, 1, 5250),
		('O19002', 'P00001', 10, 0, 525),
		('O46865', 'P07868', 3, 3, 3150),
		('O46865', 'P07885', 3, 1, 5250),
		('O46865', 'P00001', 10, 10, 520),
		('O46865', 'P03453', 4, 4, 1050),
		('O19003', 'P03453', 2, 2, 1050),
		('O19003', 'P06734', 1, 1, 12000),
		('O46866', 'P07965', 1, 0, 8400),
		('O46866', 'P07965', 1, 0, 1050),
		('O19008', 'P00001', 10, 5, 525),
		('O19008', 'P07975', 5, 3, 1050);

*************************************************************************************************************************************

3). Exercises computation on table data:

	a) Find the name of all clients having ‘a’ as the second letter in their names
	
		SELECT * FROM `client_master` where Name like '_a%'

		client_no	Name				Address1	Address2	City	Pincode	State		Bal_due
		C00002		Vandana Saitwal								Madras	780001	Tamil Nadu	0
		C00004		Basu Navindgi								Bombay	400056	Maharshtra	0
		C00005		Ravi Shreedharan							Delhi	100001	Delhi		2000

	b) Find out the clients who stay in a city whose second letter is ‘a’.
	
		SELECT * FROM `client_master` where City like '_a%'

		client_no	Name				Address1	Address2	City	Pincode	State		Bal_due
		C00002		Vandana Saitwal								Madras	780001	Tamil Nadu	0

	c) Find the list of all client who stay in ‘Bombay’ or ‘Delhi’.
			
		SELECT * FROM `client_master` where City = 'Bombay' or City = 'Delhi'

		client_no	Name				Address1	Address2	City	Pincode	State		Bal_due
		C00001		Ivan Bayross								Bombay	400054	Maharashtra	15000
		C00003		Pramada Jaguste								BOmbay	400057	Maharashtra	5000
		C00004		Basu Navindgi								Bombay	400056	Maharshtra	0
		C00005		Ravi Shreedharan							Delhi	100001	Delhi		2000
		C00006		Rukmini										Bombay	400050	Maharashtra	0

	d) Print the list of client whose bal_due is greater then value 10000.
	
		SELECT * FROM `client_master` where Bal_due > '10000'

		client_no	Name			Address1	Address2	City	Pincode	State		Bal_due
		C00001		Ivan Bayross							Bombay	400054	Maharashtra	15000
		
	e) Print the information from sales_oeder table for order placed in the month of January.
	
		SELECT * FROM `sale_order`where month(order_date) = 1

		order_no	order_date	client_no	dely_addr	salesman_no	dely_type	billed_yn	dely_date	order_status
		O19001		1996-01-12	C00001 [->]				S00001 [->]		F			N		1996-01-20	In Process
		O19002		1996-01-25	C00002 [->]				S00002 [->]		P			N		1996-01-27	Cancelled
	
	f) Display the order information for client_no ‘C00001’ and ‘C00002’.
			
		SELECT * FROM `sale_order` where client_no = 'C00001' or client_no = 'C00002'

		order_no	order_date	client_no		dely_addr	salesman_no	dely_type	billed_yn	dely_date	order_status
		O19001		1996-01-12	C00001 [->]					S00001 [->]		F			N		1996-01-20	In Process
		O19002		1996-01-25	C00002 [->]					S00002 [->]		P			N		1996-01-27	Cancelled
		O19003		1996-04-03	C00001 [->]					S00001 [->]		F			Y		1996-05-22	Fulfilled

	g) Find products whose selling price is greater than 2000 and less than or equal to 5000.
	
		SELECT * FROM `product_master` where sell_price between 2000 and 5000

		product_no	description  profit_perecent	unit_measure  qty_no_hand  reorder_lvl	sell_price	cost_price
		P07868		keyboards			2			Piece			10			3			3150		3050
		
	h) Find products whose selling price is more than 1500. Calculate a new selling price as, original selling price * .15. Rename the new column in the above query as new_price.
	
		SELECT *,sell_price*15 as new_price FROM `product_master`where sell_price > 1500

		product_no	description	profit_perecent	unit_measure  qty_no_hand	reorder_lvl	sell_price	cost_price	new_price
		P03453		monitors		6			Piece			10				3		12000		11280		180000
		P07868		keyboards		2			Piece			10				3		3150		3050		47250
		P07885		CD Drive		3			Piece			10				3		5250		5100		78750
		P07965		540 HHD			4			Piece			10				3		8400		8000		126000
		
	i) List the names, city and state of clients who are not in the state of ‘Maharastra’.
	
		SELECT name,city,state FROM `client_master` where state != 'Maharashtra'

		Name				City	State
		Vandana Saitwal		Madras	Tamil Nadu
		Basu Navindgi		Bombay	Maharshtra
		Ravi Shreedharan	Delhi	Delhi
		
	j) Count the total number of orders.
	
		SELECT count(*) as total_orders FROM `sale_order`

		total_orders
			6

	k) Calculate the average price of all the products.
	
		SELECT avg(sell_price) as average_price FROM `product_master`

		average_price
		3666.6667

	l) Determine the maximum and minimum product prices. Rename the output as max_price and min_price respectively.
	
		SELECT max(sell_price) as max_price,min(sell_price) as min_price FROM `product_master`

		max_price	min_price
		12000		525
		
	m) Count the number of products having price greater than or equal to 1500.
	
		SELECT count(sell_price) as 'price>=1500' FROM `product_master` where sell_price >= 1500

		price>=1500
			4

	n) Find all the products whose qty_no_hand is less than recorder level.
	
		SELECT * FROM `product_master` where qty_no_hand < reorder_lvl

		product_no	description	profit_perecent	unit_measure  qty_no_hand	reorder_lvl	sell_price	cost_price
		P08865		1.22 Drive		5			Piece			2				3		1050		1000
	
*************************************************************************************************************************************

4). Exercise on Date Manipulation:

	a) Display the order number and day on which clients placed their order.
	
		SELECT order_no,day(order_date) as Day FROM `sale_order`
		
		order_no	Day
		O19001		12
		O19002		25
		O19003		3
		O19008		24
		O46865		18
		O46866		20

	b) Display the month (in alphabets) and date when the order must be delivered.
	
		SELECT order_no,dely_date,MONTHName(dely_date) as Month FROM `sale_order`

		order_no	dely_date	Month
		O19001		1996-01-20	January
		O19002		1996-01-27	January
		O19003		1996-05-22	May
		O19008		1996-05-26	May
		O46865		1996-02-20	February
		O46866		1996-05-22	May
		
	c) Display the order_date in the format ‘DD-Month-yy’. e.g. 12-February-96.
	
		SELECT order_no,DATE_FORMAT(order_date,'%d-%M-%y') as Date FROM `sale_order`

		order_no	Date
		O19001		12-January-96
		O19002		25-January-96
		O19003		03-April-96
		O19008		24-May-96
		O46865		18-February-96
		O46866		20-May-96

	d) Find the date, 15 days after today’s date
		.
		select DATE_ADD(NOW(),INTERVAL 15 DAY) as '15 Days after Date'

		15 Days after Date
		2018-12-05 00:09:51

	e) Find the number of days elapsed between today’s date and the delivery date of the orders placed by the clients.
	
		SELECT DATEDIFF(NOW(),dely_date) as Duration from sale_order

		Duration
		8349
		8342
		8226
		8222
		8318
		8226
	
*************************************************************************************************************************************

5). Exercise on using Having and Group By Clauses:

	a) Print the description and total qty sold for each product.
	
		SELECT p.product_no,description,sum(qty_ordered) as qty_sold FROM sales_order_details as s, product_master as p where p.product_no = s.product_no group by p.product_no

		product_no	description		qty_sold
		P00001 [->]	1.44 Floppies	34
		P03453 [->]	monitors		6
		P06734 [->]	mouse			1
		P07868 [->]	keyboards		3
		P07885 [->]	CD Drive		5
		P07965 [->]	540 HHD			4
		P07975 [->]	1.44 Drive		5
		
	b) Find the value of each product sold.
		
		SELECT p.product_no,sum(sell_price*qty_ordered) as Total_value FROM sales_order_details as s, product_master as p where p.product_no = s.product_no group by p.product_no
	
		product_no	Total_value
		P00001 [->]	17850
		P03453 [->]	72000
		P06734 [->]	1050
		P07868 [->]	9450
		P07885 [->]	26250
		P07965 [->]	33600
		P07975 [->]
		
	c) Calculate the average qty sold for each client that has a maximum order value of 15000.00.
	
		SELECT o.client_no,avg(qty_ordered) as avg_qty_sold FROM sales_order_details as s, sale_order as o where o.order_no = s.order_no and qty_ordered*product_rate <= 15000 group by o.client_no

		client_no	avg_qty_sold
		C00001		2.2500
		C00002		10.0000
		C00003		5.6667
		C00004		1.0000
		C00005		7.5000
		
	d) Find out the sum total of all the billed orders for the month of January.
	
		SELECT sum(qty_ordered*product_rate) as total_of_january FROM sales_order_details as s, sale_order as o where month(order_date) = 1
		
		total_of_january
		206600
	
*************************************************************************************************************************************

6). Exercise on Joins and Correlation:

	a) Find out the products, which have been sold to ‘Ivan Bayross’.
	
		SELECT description as 'Ivan Bayross\'s prodcts' FROM sale_order as o, client_master as c, sales_order_details as s,product_master as p where p.product_no = s.product_no and o.order_no = s.order_no and c.client_no = o.client_no and c.Name = 'Ivan Bayross' group by p.product_no
			
		Ivan Bayross's prodcts
			1.44 Floppies
			540 HHD
			CD Drive
			monitors
			mouse

	b) Find out the products and their quantities that will have to be delivered in the current month.
	
		SELECT description,sum(qty_ordered) FROM sale_order as o, sales_order_details as s,product_master as p where o.order_no = s.order_no and s.product_no = p.product_no and month(dely_date) = 5 group by o.order_no

		description		sum(qty_ordered)
		monitors			3
		1.44 Floppies		15
		540 HHD				2
		
	c) Find the product_no and description of constantly sold i.e. rapidly moving products.
	
		SELECT p.product_no,sum(qty_ordered) FROM sale_order as o, sales_order_details as s,product_master as p where s.order_no = o.order_no and s.product_no = p.product_no group by p.product_no order by sum(qty_ordered) desc limit 3
		
		product_no	sum(qty_ordered)
		P00001			34
		P03453			6
		P07975			5
		
	d) Find the name of clients who have purchase ‘CD Drive’.
	
		SELECT c.Name as 'CD Drive Buyers' FROM sale_order as o, client_master as c, sales_order_details as s,product_master as p where p.product_no = s.product_no and o.order_no = s.order_no and c.client_no = o.client_no and p.description = 'CD Drive' group by c.Name

		CD Drive Buyers
		Ivan Bayross
		Pramada Jaguste
		
	e) List the product_no and order_no of customers having qty_ordered less than 5 from the sales_order_details table for the product ‘1.44 Floppies’.
	
		SELECT p.product_no,o.order_no FROM sale_order as o, sales_order_details as s,product_master as p where s.order_no = o.order_no and s.product_no = p.product_no and p.description = '1.44 Floppies' group by o.order_no
		
		product_no	order_no
		P00001		O19001
		P00001		O19002
		P00001		O19008
		P00001		O46865

	f) Find the products and their quantities for the orders placed by ‘lvan Bayross’ and ‘Vandana Saitwal’.
	
		SELECT p.product_no,sum(qty_ordered) as qty FROM sale_order as o, client_master as c, sales_order_details as s,product_master as p where p.product_no = s.product_no and o.order_no = s.order_no and c.client_no = o.client_no and (c.Name = 'Ivan Bayross' or c.Name = 'Vandana Saitwal') group by p.product_no

		product_no	qty
		P00001		14
		P03453		2
		P06734		1
		P07885		2
		P07965		2
		
	g) Find the products and their quantities for the orders placed by client_no ‘C00001’ and ‘C00002’.
	
		SELECT p.product_no,sum(qty_ordered) as qty FROM sale_order as o, sales_order_details as s,product_master as p where p.product_no = s.product_no and o.order_no = s.order_no and (o.client_no = 'C00001' or o.client_no = 'C00002') group by p.product_no
	
		product_no	qty
		P00001		14
		P03453		2
		P06734		1
		P07885		2
		P07965		2	
	
*************************************************************************************************************************************

7). Exercise on Sub-queries:

	a) Find the product_no and description of non-moving products i.e. products not being sold.
	
		SELECT p.product_no, description FROM product_master as p left join sales_order_details as s on p.product_no = s.product_no where s.product_no is null
		
		product_no	description
		P07865		1.22 Floppies
		P08865		1.22 Drive
		
	b) Find the customer name, address1, address2, city and pin code for the client who has placed order no ‘O19001’.
	
		SELECT Name,Address1,Address2,City,Pincode FROM client_master as c,sale_order as o where c.client_no = o.client_no and order_no = 'O19001'

		Name			Address1	Address2	City	Pincode
		Ivan Bayross							Bombay	400054
		
	c) Find the client names who have placed orders before the month of May’96.
	
		SELECT Name FROM client_master as c,sale_order as o where c.client_no = o.client_no and year(order_date) <= 1996 and month(order_date) < 5 group by Name

			Name
		Ivan Bayross
		Pramada Jaguste
		Vandana Saitwal
		
	d) Find out if the product ‘1.44 Drive’ has been ordered by any client and print the clint_no, name to whom it was sold.
	
		SELECT c.client_no,Name FROM sale_order as o, sales_order_details as s,product_master as p,client_master as c where s.order_no = o.order_no and s.product_no = p.product_no and c.client_no = o.client_no and p.description = '1.44 Drive' group by o.order_no

		client_no		Name
		C00005 [->]	Ravi Shreedharan
		
	e) Find the names of clients who have placed orders worth Rs.10000 or more.
	
		SELECT Name FROM sales_order_details as s, sale_order as o, client_master as c where c.client_no = o.client_no and o.order_no = s.order_no and qty_ordered*product_rate >= 10000 group by o.client_no

			Name
		Ivan Bayross
		Pramada Jaguste

*************************************************************************************************************************************

8). Exercise on Constructing Sentences with data:

	a) Print information from product_master, sales_order_detail tables in the following format for all the records:
		{Description} worth Rs. {total sales for the product} was sold.
	
		SELECT concat(Description,' worth Rs\. ',(qty_ordered*product_rate) ,' was sold\.') as 'Data' FROM sales_order_details as s, product_master as p WHERE p.product_no = s.product_no group by Description

						Data
		1.44 Drive worth Rs. 5250 was sold.
		1.44 Floppies worth Rs. 2100 was sold.
		540 HHD worth Rs. 16800 was sold.
		CD Drive worth Rs. 10500 was sold.
		keyboards worth Rs. 9450 was sold.
		monitors worth Rs. 4200 was sold.
		mouse worth Rs. 12000 was sold.

	b) Print information from product_master, sales_order_detail tables in the following format for all the records:
		{Description} worth Rs. {total sales for the product} was ordered in the month of {order_date in month format}.
	
		SELECT concat(Description,' worth Rs\. ',qty_ordered*product_rate,' was ordered in a month of ',MONTH(o.order_date),'\.') as 'Data' FROM sales_order_details as s, product_master as p, sale_order as o WHERE p.product_no = s.product_no and s.order_no = o.order_no group by Description

								Data
		1.44 Drive worth Rs. 5250 was ordered in a month of 5.
		1.44 Floppies worth Rs. 2100 was ordered in a month of 1.
		540 HHD worth Rs. 16800 was ordered in a month of 1.
		CD Drive worth Rs. 10500 was ordered in a month of 1.
		keyboards worth Rs. 9450 was ordered in a month of 2.
		monitors worth Rs. 2100 was ordered in a month of 4.
		mouse worth Rs. 12000 was ordered in a month of 4.
		
	c) Print information from client_master, product_master, sales_order tables in the following format for all the records:
		{cust_name} has placed order {order_no} on {order_date}.
		
		SELECT concat(Name,' has placed order ',order_no,' on date ',order_date,'\.') as 'Data' FROM client_master as c, sale_order as o WHERE c.client_no = o.client_no group by Name

								Data
		Basu Navindgi has placed order O46866 on date 1996-05-20.
		Ivan Bayross has placed order O19001 on date 1996-01-12.
		Pramada Jaguste has placed order O46865 on date 1996-02-18.
		Ravi Shreedharan has placed order O19008 on date 1996-05-24.
		Vandana Saitwal has placed order O19002 on date 1996-01-25.

*************************************************************************************************************************************
*************************************************************************************************************************************
